	private void updatePlayer(Packet packet) {
		int size = World.getWorld().getPlayerList().size();
		int j = packet.putBits(8);
		if (j < size) {
			for (int k = j; k < size; k++) {
				// this.anIntArray840[this.anInt839++] = this.playerIndices[k];
			}
		}
		if (j > size) {
			SignLink.reporterror(this.myUsername + " Too many players");
		}
		World.getWorld().getPlayerList().clear();
		for (int l = 0; l < j; l++) {
			Player player = World.getWorld().getPlayerList().get(l);
			int j1 = packet.putBits(1);
			@SuppressWarnings("unused")
			int position = World.getWorld().getPlayerList().indexOf(player);
			if (j1 == 0) {
				position = l;
				player.time = Client.loopCycle;
			} else {
				int k1 = packet.putBits(2);
				if (k1 == 0) {
					position = l;
					player.time = Client.loopCycle;
					this.anIntArray894[this.anInt893++] = l;
				} else if (k1 == 1) {
					position = l;
					player.time = Client.loopCycle;
					int l1 = packet.putBits(3);
					player.moveInDir(false, l1);
					int j2 = packet.putBits(1);
					if (j2 == 1) {
						this.anIntArray894[this.anInt893++] = l;
					}
				} else if (k1 == 2) {
					position = l;
					player.time = Client.loopCycle;
					int i2 = packet.putBits(3);
					player.moveInDir(true, i2);
					int k2 = packet.putBits(3);
					player.moveInDir(true, k2);
					int l2 = packet.putBits(1);
					if (l2 == 1) {
						this.anIntArray894[this.anInt893++] = l;
					}
				} else if (k1 == 3) {
					this.anIntArray840[this.anInt839++] = l;
				}
			}
		}
	}