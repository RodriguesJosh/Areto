	private void appendPlayerUpdateMasks(int i, int j, Packet packet, Player player) {}
		if ((i & 0x400) != 0) {
			player.anInt1543 = packet.method428();
			player.anInt1545 = packet.method428();
			player.anInt1544 = packet.method428();
			player.anInt1546 = packet.method428();
			player.anInt1547 = packet.method436() + Client.loopCycle;
			player.anInt1548 = packet.method435() + Client.loopCycle;
			player.turnInfo = packet.method428();
			player.method446();
		}
		if ((i & 0x100) != 0) {
			player.gfxID = packet.method434();
			int k = packet.getInt();
			player.graphicHeight = k >> 16;
						player.gfxDelay = Client.loopCycle + (k & 0xffff);
						player.currentAnim = 0;
						player.anInt1522 = 0;
						if (player.gfxDelay > Client.loopCycle) {
							player.currentAnim = -1;
						}
						if (player.gfxID == 65535) {
							player.gfxID = -1;
						}
		}
		if ((i & 8) != 0) {
			int l = packet.method434();
			if (l == 65535) {
				l = -1;
			}
			int i2 = packet.method427();
			if ((l == player.anim) && (l != -1)) {
				int i3 = Sequence.anims[l].anInt365;
				if (i3 == 1) {
					player.anInt1527 = 0;
					player.anInt1528 = 0;
					player.animationDelay = i2;
					player.anInt1530 = 0;
				}
				if (i3 == 2) {
					player.anInt1530 = 0;
				}
			} else if ((l == -1) || (player.anim == -1) || (Sequence.anims[l].anInt359 >= Sequence.anims[player.anim].anInt359)) {
				player.anim = l;
				player.anInt1527 = 0;
				player.anInt1528 = 0;
				player.animationDelay = i2;
				player.anInt1530 = 0;
				player.anInt1542 = player.smallXYIndex;
			}
		}
		if ((i & 4) != 0) {
			player.textSpoken = packet.getString();
			if (player.textSpoken.charAt(0) == '~') {
				player.textSpoken = player.textSpoken.substring(1);
				this.pushMessage(player.textSpoken, 2, player.name);
			} else if (player == Client.myPlayer) {
				this.pushMessage(player.textSpoken, 2, player.name);
			}
			player.fancyTextColourType = 0;
			player.fancyTextDrawType = 0;
			player.textCycle = 150;
		}
		if ((i & 0x80) != 0) {
			int i1 = packet.method434();
			int j2 = packet.getUnsignedByte();
			int j3 = packet.method427();
			int k3 = packet.getPosition();
			if ((player.name != null) && player.visible) {
				boolean flag = false;
				if (j2 <= 1) {
					for (Ignore ignore : World.getWorld().getIgnoreList()) {
						String name = ignore.getName();
						if (name != player.name) {
							continue;
						}
						flag = true;
						break;
					}
				}
				if (!flag && (this.anInt1251 == 0)) {
					try {
						this.aStream_834.setPosition(0);
						packet.method442(j3, 0, this.aStream_834.buffer);
						this.aStream_834.setPosition(0);
						String s = TextInput.method525(j3, this.aStream_834);
						s = Censor.doCensor(s);
						player.textSpoken = s;
						player.fancyTextColourType = i1 >> 8;
				player.privelage = j2;
				player.fancyTextDrawType = i1 & 0xff;
				player.textCycle = 150;
				if ((j2 == 2) || (j2 == 3)) {
					this.pushMessage(s, 1, "@cr2@" + player.name);
				} else if (j2 == 1) {
					this.pushMessage(s, 1, "@cr1@" + player.name);
				} else {
					this.pushMessage(s, 2, player.name);
				}
					} catch (Exception exception) {
						SignLink.reporterror("Chat error.");
					}
				}
			}
			packet.setPosition(k3 + j3);
		}
		if ((i & 1) != 0) {
			player.interactingEntity = packet.method434();
			if (player.interactingEntity == 65535) {
				player.interactingEntity = -1;
			}
		}
		if ((i & 0x10) != 0) {
			int j1 = packet.method427();
			byte abyte0[] = new byte[j1];
			Packet stream_1 = new Packet(abyte0);
			System.out.println("1: " + packet.getPosition());
			packet.getBytes(j1, 0, abyte0);
			System.out.println("2: " + packet.getPosition());
			this.aStreamArray895s[j] = stream_1;
			player.updatePlayer(stream_1);
		}
		if ((i & 2) != 0) {
			player.faceX = packet.method436();
			player.faceY = packet.method434();
		}
		if ((i & 0x20) != 0) {
			int k1 = packet.getUnsignedByte();
			int k2 = packet.method426();
			player.updateHitData(k2, k1, Client.loopCycle);
			player.loopCycleStatus = Client.loopCycle + 300;
			player.currentHealth = packet.method427();
			player.maxHealth = packet.getUnsignedByte();
		}
		if ((i & 0x200) != 0) {
			int l1 = packet.getUnsignedByte();
			int l2 = packet.method428();
			player.updateHitData(l2, l1, Client.loopCycle);
			player.loopCycleStatus = Client.loopCycle + 300;
			player.currentHealth = packet.getUnsignedByte();
			player.maxHealth = packet.method427();
		}
	}