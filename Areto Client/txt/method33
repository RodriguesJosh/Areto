	private void method33(int i) {
		int j = SettingUsagePointers.cache[i].usage;
		if (j == 0) {
			return;
		}
		int k = this.variousSettings[i];
		if (j == 1) {
			if (k == 1) {
				Rasterizer.method372(0.90000000000000002D);
			}
			if (k == 2) {
				Rasterizer.method372(0.80000000000000004D);
			}
			if (k == 3) {
				Rasterizer.method372(0.69999999999999996D);
			}
			if (k == 4) {
				Rasterizer.method372(0.59999999999999998D);
			}
			ItemDef.rgbImageCache.unlinkAll();
			this.welcomeScreenRaised = true;
		}
		if (j == 3) {
			boolean flag1 = this.musicEnabled;
			if (k == 0) {
				this.adjustVolume(this.musicEnabled, 0);
				this.musicEnabled = true;
			}
			if (k == 1) {
				this.adjustVolume(this.musicEnabled, -400);
				this.musicEnabled = true;
			}
			if (k == 2) {
				this.adjustVolume(this.musicEnabled, -800);
				this.musicEnabled = true;
			}
			if (k == 3) {
				this.adjustVolume(this.musicEnabled, -1200);
				this.musicEnabled = true;
			}
			if (k == 4) {
				this.musicEnabled = false;
			}
			if ((this.musicEnabled != flag1) && !Client.lowMem) {
				if (this.musicEnabled) {
					this.nextSong = this.currentSong;
					this.songChanging = true;
					this.onDemandFetcher.method558(2, this.nextSong);
				} else {
					this.stopMidi();
				}
				this.prevSong = 0;
			}
		}
		if (j == 4) {
			if (k == 0) {
				this.aBoolean848 = true;
				this.setWaveVolume(0);
			}
			if (k == 1) {
				this.aBoolean848 = true;
				this.setWaveVolume(-400);
			}
			if (k == 2) {
				this.aBoolean848 = true;
				this.setWaveVolume(-800);
			}
			if (k == 3) {
				this.aBoolean848 = true;
				this.setWaveVolume(-1200);
			}
			if (k == 4) {
				this.aBoolean848 = false;
			}
		}
		if (j == 5) {
			this.anInt1253 = k;
		}
		if (j == 6) {
			this.anInt1249 = k;
		}
		if (j == 8) {
			this.splitPrivateChat = k;
			this.inputTaken = true;
		}
		if (j == 9) {
			this.anInt913 = k;
		}
	}