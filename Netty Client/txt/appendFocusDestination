	private void appendFocusDestination(Entity entity) {
		if (entity.runAnimIndex == 0) {
			return;
		}
		if ((entity.interactingEntity != -1) && (entity.interactingEntity < 32768)) {
			NPC npc = this.npcArray[entity.interactingEntity];
			if (npc != null) {
				int i1 = entity.x - npc.x;
				int k1 = entity.y - npc.y;
				if ((i1 != 0) || (k1 != 0)) {
					entity.turnDirection = (int)(Math.atan2(i1, k1) * 325.94900000000001D) & 0x7ff;
				}
			}
		}
		if (entity.interactingEntity >= 32768) {
			int j = entity.interactingEntity - 32768;
			if (j == this.unknownInt10) {
				// j = this.myPlayerIndex;
			}
			Player player = World.getWorld().getPlayerList().get(j);
			if (player != null) {
				int l1 = entity.x - player.x;
				int i2 = entity.y - player.y;
				if ((l1 != 0) || (i2 != 0)) {
					entity.turnDirection = (int)(Math.atan2(l1, i2) * 325.94900000000001D) & 0x7ff;
				}
			}
		}
		if (((entity.faceX != 0) || (entity.faceY != 0)) && ((entity.smallXYIndex == 0) || (entity.anInt1503 > 0))) {
			int k = entity.x - ((entity.faceX - this.baseX - this.baseX) * 64);
			int j1 = entity.y - ((entity.faceY - this.baseY - this.baseY) * 64);
			if ((k != 0) || (j1 != 0)) {
				entity.turnDirection = (int)(Math.atan2(k, j1) * 325.94900000000001D) & 0x7ff;
			}
			entity.faceX = 0;
			entity.faceY = 0;
		}
		int l = (entity.turnDirection - entity.currentRotation) & 0x7ff;
		if (l != 0) {
			if ((l < entity.degreesToTurn) || (l > (2048 - entity.degreesToTurn))) {
				entity.currentRotation = entity.turnDirection;
			} else if (l > 1024) {
				entity.currentRotation -= entity.degreesToTurn;
			} else {
				entity.currentRotation += entity.degreesToTurn;
			}
			entity.currentRotation &= 0x7ff;
			if ((entity.anInt1517 == entity.standAnimIndex) && (entity.currentRotation != entity.turnDirection)) {
				if (entity.standTurnAnimIndex != -1) {
					entity.anInt1517 = entity.standTurnAnimIndex;
					return;
				}
				entity.anInt1517 = entity.walkAnimIndex;
			}
		}
	}