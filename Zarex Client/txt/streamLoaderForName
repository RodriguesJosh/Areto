	private JagexArchive streamLoaderForName(int i, String s, String s1, int j, int k) {
		byte abyte0[] = null;
		int l = 5;
		try {
			if (this.jagexResourceCaches[0] != null) {
				abyte0 = this.jagexResourceCaches[0].decompress(i);
			}
		} catch (Exception e) {}
		if (abyte0 != null) {
			JagexArchive jagexArchive = new JagexArchive(abyte0);
			return jagexArchive;
		}
		int j1 = 0;
		while (abyte0 == null) {
			String s2 = "Unknown error";
			this.drawLoadingText(k, "Requesting " + s);
			try {
				int k1 = 0;
				DataInputStream datainputstream = this.openJagGrabInputStream(s1 + j);
				byte abyte1[] = new byte[6];
				datainputstream.readFully(abyte1, 0, 6);
				Packet packet = new Packet(abyte1);
				packet.setPosition(3);
				int i2 = packet.getTriBytes() + 6;
				int j2 = 6;
				abyte0 = new byte[i2];
				System.arraycopy(abyte1, 0, abyte0, 0, 6);
				while (j2 < i2) {
					int l2 = i2 - j2;
					if (l2 > 1000) {
						l2 = 1000;
					}
					int j3 = datainputstream.read(abyte0, j2, l2);
					if (j3 < 0) {
						s2 = "Length error: " + j2 + "/" + i2;
						throw new IOException("EOF");
					}
					j2 += j3;
					int k3 = (j2 * 100) / i2;
					if (k3 != k1) {
						this.drawLoadingText(k, "Loading " + s + " - " + k3 + "%");
					}
					k1 = k3;
				}
				datainputstream.close();
				try {
					if (this.jagexResourceCaches[0] != null) {
						this.jagexResourceCaches[0].method234(abyte0.length, abyte0, i);
					}
				} catch (Exception _ex) {
					this.jagexResourceCaches[0] = null;
				}
			} catch (IOException ioexception) {
				if (s2.equals("Unknown error")) {
					s2 = "Connection error";
				}
				abyte0 = null;
			} catch(NullPointerException _ex) {
				s2 = "Null error";
				abyte0 = null;
				if (!SignLink.reporterror) {
					return null;
				}
			} catch (ArrayIndexOutOfBoundsException _ex) {
				s2 = "Bounds error";
				abyte0 = null;
				if (!SignLink.reporterror) {
					return null;
				}
			} catch (Exception _ex) {
				s2 = "Unexpected error";
				abyte0 = null;
				if (!SignLink.reporterror) {
					return null;
				}
			}
			if (abyte0 == null) {
				for (int l1 = l; l1 > 0; l1--) {
					if (j1 >= 3) {
						this.drawLoadingText(k, "Game updated - please reload page");
						l1 = 10;
					} else {
						this.drawLoadingText(k, s2 + " - Retrying in " + l1);
					}
					try {
						Thread.sleep(1000L);
					} catch (Exception e) {}
				}
				l *= 2;
				if (l > 60) {
					l = 60;
				}
				this.aBoolean872 = !this.aBoolean872;
			}
		}
		JagexArchive streamLoader_1 = new JagexArchive(abyte0);
		return streamLoader_1;
	}