	private void handleMusicEvents() {
		for (int i = 0; i < this.anInt1062; i++) {
			if (this.anIntArray1250[i] <= 0) {
				boolean flag1 = false;
				try {
					if ((this.anIntArray1207[i] == this.anInt874) && (this.anIntArray1241[i] == this.anInt1289)) {
						if (!this.replayWave()) {
							flag1 = true;
						}
					} else {
						Packet packet = Sound.method241(this.anIntArray1241[i], this.anIntArray1207[i]);
						if ((System.currentTimeMillis() + (packet.getPosition() / 22)) > (this.aLong1172 + (this.anInt1257 / 22))) {
							this.anInt1257 = packet.getPosition();
							this.aLong1172 = System.currentTimeMillis();
							if (this.saveWave(packet.buffer, packet.getPosition())) {
								this.anInt874 = this.anIntArray1207[i];
								this.anInt1289 = this.anIntArray1241[i];
							} else {
								flag1 = true;
							}
						}
					}
				} catch (Exception exception) {}
				if (!flag1 || (this.anIntArray1250[i] == -5)) {
					this.anInt1062--;
					for (int j = i; j < this.anInt1062; j++) {
						this.anIntArray1207[j] = this.anIntArray1207[j + 1];
						this.anIntArray1241[j] = this.anIntArray1241[j + 1];
						this.anIntArray1250[j] = this.anIntArray1250[j + 1];
					}
					i--;
				} else {
					this.anIntArray1250[i] = -5;
				}
			} else {
				this.anIntArray1250[i]--;
			}
		}
		if (this.prevSong > 0) {
			this.prevSong -= 20;
			if (this.prevSong < 0) {
				this.prevSong = 0;
			}
			if ((this.prevSong == 0) && this.musicEnabled && !Client.lowMem) {
				this.nextSong = this.currentSong;
				this.songChanging = true;
				this.onDemandFetcher.method558(2, this.nextSong);
			}
		}
	}