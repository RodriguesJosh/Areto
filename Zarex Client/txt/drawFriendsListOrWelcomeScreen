	private void drawFriendsListOrWelcomeScreen(RSInterface class9) {
		int j = class9.contentType;
		if (((j >= 1) && (j <= 100)) || ((j >= 701) && (j <= 800))) {
			if ((j == 1) && (this.anInt900 == 0)) {
				class9.message = "Loading friend list";
				class9.atActionType = 0;
				return;
			}
			if ((j == 1) && (this.anInt900 == 1)) {
				class9.message = "Connecting to friendserver";
				class9.atActionType = 0;
				return;
			}
			if ((j == 2) && (this.anInt900 != 2)) {
				class9.message = "Please wait...";
				class9.atActionType = 0;
				return;
			}
			int k = this.friendsCount;
			if (this.anInt900 != 2) {
				k = 0;
			}
			if (j > 700) {
				j -= 601;
			} else {
				j--;
			}
			if (j >= k) {
				class9.message = "";
				class9.atActionType = 0;
				return;
			} else {
				class9.message = World.getWorld().getFriendList().get(j).getName();
				class9.atActionType = 1;
				return;
			}
		}
		if (((j >= 101) && (j <= 200)) || ((j >= 801) && (j <= 900))) {
			int l = this.friendsCount;
			if (this.anInt900 != 2) {
				l = 0;
			}
			if (j > 800) {
				j -= 701;
			} else {
				j -= 101;
			}
			if (j >= l) {
				class9.message = "";
				class9.atActionType = 0;
				return;
			}
			if (this.friendsNodeIDs[j] == 0) { // Offline.
				class9.message = "@red@Offline";
			} else if (this.friendsNodeIDs[j] == Client.nodeID) { // Same world.
				class9.message = "@gre@World-" + (this.friendsNodeIDs[j] - 9);
			} else { // Other world.
				class9.message = "@yel@World-" + (this.friendsNodeIDs[j] - 9);
			}
			class9.atActionType = 1;
			return;
		}
		if (j == 203) {
			int i1 = this.friendsCount;
			if (this.anInt900 != 2) {
				i1 = 0;
			}
			class9.scrollMax = (i1 * 15) + 20;
			if (class9.scrollMax <= class9.height) {
				class9.scrollMax = class9.height + 1;
			}
			return;
		}
		if ((j >= 401) && (j <= 500)) {
			if (((j -= 401) == 0) && (this.anInt900 == 0)) {
				class9.message = "Loading ignore list";
				class9.atActionType = 0;
				return;
			}
			if ((j == 1) && (this.anInt900 == 0)) {
				class9.message = "Please wait...";
				class9.atActionType = 0;
				return;
			}
			int j1 = this.ignoreCount;
			if (this.anInt900 == 0) {
				j1 = 0;
			}
			if (j >= j1) {
				class9.message = "";
				class9.atActionType = 0;
				return;
			} else {
				class9.message = TextClass.fixName(World.getWorld().getIgnoreList().get(j).getName());
				class9.atActionType = 1;
				return;
			}
		}
		if (j == 503) {
			class9.scrollMax = (this.ignoreCount * 15) + 20;
			if (class9.scrollMax <= class9.height) {
				class9.scrollMax = class9.height + 1;
			}
			return;
		}
		if (j == 327) {
			class9.rotation1 = 150;
			class9.rotation2 = (int) (Math.sin(Client.loopCycle / 40D) * 256D) & 0x7ff;
			if (this.aBoolean1031) {
				for (int k1 = 0; k1 < 7; k1++) {
					int l1 = this.anIntArray1065[k1];
					if ((l1 >= 0) && !IdentityKit.cache[l1].isBodyDownloaded()) {
						return;
					}
				}
				this.aBoolean1031 = false;
				Model[] models = new Model[7];
				int i2 = 0;
				for (int j2 = 0; j2 < 7; j2++) {
					int k2 = this.anIntArray1065[j2];
					if (k2 >= 0) {
						models[i2++] = IdentityKit.cache[k2].getBodyModel();
					}
				}
				Model model = new Model(i2, models);
				for (int l2 = 0; l2 < 5; l2++) {
					if (this.anIntArray990[l2] != 0) {
						model.method476(Client.anIntArrayArray1003[l2][0], Client.anIntArrayArray1003[l2][this.anIntArray990[l2]]);
						if (l2 == 1) {
							model.method476(Client.anIntArray1204[0], Client.anIntArray1204[this.anIntArray990[l2]]);
						}
					}
				}
				model.method469();
				model.method470(Sequence.anims[Client.myPlayer.standAnimIndex].frame2IDS[0]);
				model.method479(64, 850, -30, -50, -30, true);
				class9.mediaType = 5;
				class9.mediaID = 0;
				RSInterface.setCustomModel(model);
			}
			return;
		}
		if (j == 324) {
			if (this.aClass30_Sub2_Sub1_Sub1_931 == null) {
				this.aClass30_Sub2_Sub1_Sub1_931 = class9.imageConditionFalse;
				this.aClass30_Sub2_Sub1_Sub1_932 = class9.sprite2;
			}
			if (this.aBoolean1047) {
				class9.imageConditionFalse = this.aClass30_Sub2_Sub1_Sub1_932;
				return;
			} else {
				class9.imageConditionFalse = this.aClass30_Sub2_Sub1_Sub1_931;
				return;
			}
		}
		if (j == 325) {
			if (this.aClass30_Sub2_Sub1_Sub1_931 == null) {
				this.aClass30_Sub2_Sub1_Sub1_931 = class9.imageConditionFalse;
				this.aClass30_Sub2_Sub1_Sub1_932 = class9.sprite2;
			}
			if (this.aBoolean1047) {
				class9.imageConditionFalse = this.aClass30_Sub2_Sub1_Sub1_931;
				return;
			} else {
				class9.imageConditionFalse = this.aClass30_Sub2_Sub1_Sub1_932;
				return;
			}
		}
		if (j == 600) {
			class9.message = this.reportAbuseInput;
			if ((Client.loopCycle % 20) < 10) {
				class9.message += "|";
				return;
			} else {
				class9.message += " ";
				return;
			}
		}
		if (j == 613) {
			if (this.myPrivilege >= 1) {
				if (this.canMute) {
					class9.textColor = 0xff0000;
					class9.message = "Moderator option: Mute player for 48 hours: <ON>";
				} else {
					class9.textColor = 0xffffff;
					class9.message = "Moderator option: Mute player for 48 hours: <OFF>";
				}
			} else {
				class9.message = "";
			}
		}
		if ((j == 650) || (j == 655)) {
			if (this.anInt1193 != 0) {
				String s;
				if (this.daysSinceLastLogin == 0) {
					s = "earlier today";
				} else if (this.daysSinceLastLogin == 1) {
					s = "yesterday";
				} else {
					s = this.daysSinceLastLogin + " days ago";
				}
				class9.message = "You last logged in " + s + " from: " + SignLink.dns;
			} else {
				class9.message = "";
			}
		}
		if (j == 651) {
			if (this.unreadMessages == 0) {
				class9.message = "0 unread messages";
				class9.textColor = 0xffff00;
			}
			if (this.unreadMessages == 1) {
				class9.message = "1 unread message";
				class9.textColor = 65280;
			}
			if (this.unreadMessages > 1) {
				class9.message = this.unreadMessages + " unread messages";
				class9.textColor = 65280;
			}
		}
		if (j == 652) {
			if (this.daysSinceRecovChange == 201) {
				if (this.membersInt == 1) {
					class9.message = "@yel@This is a non-members world: @whi@Since you are a member we";
				} else {
					class9.message = "";
				}
			} else if (this.daysSinceRecovChange == 200) {
				class9.message = "You have not yet set any password recovery questions.";
			} else {
				String s1;
				if (this.daysSinceRecovChange == 0) {
					s1 = "Earlier today";
				} else if (this.daysSinceRecovChange == 1) {
					s1 = "Yesterday";
				} else {
					s1 = this.daysSinceRecovChange + " days ago";
				}
				class9.message = s1 + " you changed your recovery questions";
			}
		}
		if (j == 653) {
			if (this.daysSinceRecovChange == 201) {
				if (this.membersInt == 1) {
					class9.message = "@whi@recommend you use a members world instead. You may use";
				} else {
					class9.message = "";
				}
			} else if (this.daysSinceRecovChange == 200) {
				class9.message = "We strongly recommend you do so now to secure your account.";
			} else {
				class9.message = "If you do not remember making this change then cancel it immediately";
			}
		}
		if (j == 654) {
			if (this.daysSinceRecovChange == 201) {
				if (this.membersInt == 1) {
					class9.message = "@whi@this world but member benefits are unavailable whilst here.";
					return;
				} else {
					class9.message = "";
					return;
				}
			}
			if (this.daysSinceRecovChange == 200) {
				class9.message = "Do this from the 'account management' area on our front webpage";
				return;
			}
			class9.message = "Do this from the 'account management' area on our front webpage";
		}
	}